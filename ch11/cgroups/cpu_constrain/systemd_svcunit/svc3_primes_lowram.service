# svc3_primes_lowmem.service
# Memory constrained version
[Unit]
Description=My test prime numbers generator app to launch at boot (memory constrained version)
#---------------------
# After=<xxx.target>
# See all targets with 
#  ls /lib/systemd/system/*.target
# See all dependencies on a given target with
#  systemctl list-dependencies <target>
After=mount.target

[Service]
#--- Stress memory ---
# See the man page systemd.resource-control(5) for details
# Set mem high to 512M
MemoryHigh=512M
# set mem max to 756M
#MemoryMax=756M
#---

# Still good case:
# Run the stressor allocing upto 400 MB with 1 worker for upto 10s
#ExecStart=/usr/bin/stress-ng --malloc-bytes 400M --malloc 1 --timeout 10

# Bad case: can trigger the OOM killer!
# Run the stressor allocing upto 300 GB with 50 workers for upto 100s
# 'Should' typically cause the kernel OOM killer - or via systemd-oomd if
# enabled - to kill off all processes within the cgroup!
#
# Of course, the OOM killer (or systemd-oomd) getting invoked depends on your
# system config, on how much RAM you have. If systemd-oomd is running,
# *it* handles the OOM situation and reports it in the log.
<<<<<<< HEAD
#ExecStart=/usr/bin/stress-ng --malloc-bytes 128T --malloc 50 --timeout 100
#ExecStart=/usr/bin/stress-ng --malloc-bytes 100G --malloc-touch --malloc 10
ExecStart=stress-ng --oomable --pathological --vm 1 --vm-bytes 100% --vm-populate -t 5m
=======
#ExecStart=/usr/bin/stress-ng --malloc-bytes 100G --malloc-touch --malloc 10
#  stress-ng : --malloc-touch        touch pages force pages to be populated
#   Force the allocation of RAM this way and get it to splat faster!

# Even better bad case, to really stress memory and trigger the OOM killer (or
# the systemd-oomd daemon)! Pl run this on a test VM.
#  --oomable : Do  not  respawn a stressor if it gets killed by the Out-of-Memory (OOM) killer
#  --pathological : enable stressors that are known to hang systems.
# NOTE: In order to invoke the OOM killer quicker (which is what we want here),
# it's advisable to disable swap with
#  sudo swapoff -a
# and then test.
ExecStart=/usr/bin/stress-ng --oomable --pathological --vm 1 --vm-bytes 100% --vm-populate --malloc-bytes 100G --malloc-touch --malloc 12

# For security; also see systemd.exec(5) section 'SANDBOXING'
#NoNewPrivileges=true

# Optional: Apply 'better' cpu sched settings for this process
#CPUSchedulingPolicy=fifo
#CPUSchedulingPriority=83
# Nice value applies for only the default 'other/normal' cpu sched policy
#Nice=-20

# If this user is there, it runs as him/her user else as root
#User=osboxes
#--- Hey, DON'T keep a comment or anything on the right of a statement!
# When I did, I got this error:
# "svc1.service: Failed to determine user credentials: No such process" yada yada... :-)

# UPDATE to your preference
[Install]
WantedBy=graphical.target
#WantedBy=multi-user.target
